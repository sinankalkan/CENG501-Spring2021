# -*- coding: utf-8 -*-
"""Copy of unet denemeler.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1D8y8rqMIUPaHLoWPu49gh_EPsssPrPYC
"""

try:
    import Image
except ImportError:
    from PIL import Image

import os
import matplotlib.pyplot as plt
import numpy as np
import tensorflow as tf

from tensorflow.python.keras import backend as K
from tensorflow.keras.utils import plot_model
import glob
import random
import cv2 as cv
from random import shuffle
from IPython.display import display


from image_files_reader import train_x, train_y
from bpbm_creator import down_samples
from unet_plus_bpbm_net import unet_plus_bpbm_net
from tensorflow.python.keras.layers import  Concatenate
from bpbm_creator import all_MGT

image_writing_folder = '../../501/image_writing_folder/'

# training starts here. 
unet_bpb = unet_plus_bpbm_net()
unet_bpb.summary()


train_y[train_y!=0] = 1
y = down_samples + [train_y] + [np.concatenate([all_MGT, train_y], axis = 3)]
unet_bpb.fit(x = np.copy(train_x), y=y,  epochs = 1, batch_size=1, validation_split=0.05, verbose = 0)

any_test_image = 'CENG501/ph2 dataset/PH2 Dataset images/IMD003/IMD003_Dermoscopic_Image/IMD003.bmp'

raw = Image.open(any_test_image)
raw = np.array(raw.resize((256, 256)))/255.
raw = raw[:,:,0:3]


#predict the mask 
pred = unet_bpb.predict(np.expand_dims(raw, 0))[12]
pred.resize(256,256)

#mask post-processing 
msk  = pred.squeeze()
msk = np.stack((msk,)*3, axis=-1)

msk[msk >= 0.5] = 1 
msk[msk < 0.5] = 0 

#show the mask and the segmented image 
combined = np.concatenate([raw, msk, raw* msk], axis = 1)
plt.axis('off')
plt.imshow(combined)
plt.show()